import{r as p,b as h,a as g,j as i}from"./index-Ccc50bvq.js";import{P as y}from"./PageMetaData-CwfTEKnL.js";import{B as d}from"./urls-BhGeBsON.js";import{G as E}from"./EditPage-D8R-SVSf.js";import"./FormControl-CO_Uebzp.js";import"./FormLabel-MCMdPdRI.js";import"./ElementChildren-Ckyhgtt_.js";import"./FormGroup-CX3HN3Dv.js";import"./FormRange-DAlMXWTQ.js";import"./FormSelect-Bt2BskkO.js";import"./Button-Czdzc6_d.js";import"./Image-JoqgvPfO.js";import"./TextField-DlT7K7k6.js";import"./useSlot-CggVarzL.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-BcofISFZ.js";const G=()=>{const[n,l]=p.useState(null),{itemId:o}=h(),m=g();p.useEffect(()=>{o&&fetch(`${d}/get-item-detail/${o}`).then(async r=>{const e=await r.json();l(e)}).catch(r=>console.error(r))},[o]);const f=async r=>{try{const e=new FormData;for(const[a,t]of Object.entries(r))t instanceof File?e.append(a,t):Array.isArray(t)&&t.some(s=>s instanceof File)?t.forEach(s=>{s instanceof File&&e.append(`${a}[]`,s)}):typeof t=="object"&&t!==null?e.append(a,JSON.stringify(t)):e.append(a,t);const c=await fetch(`${d}/update-item/${o}`,{method:"POST",body:e});if(c.ok)m("/dashboard/items");else{const a=await c.json();alert(`Failed to update: ${a.message||"Unknown error"}`)}}catch(e){console.error("Error updating user:",e),alert("Error updating user. Please try again.")}},u=()=>{m("/dashboard/items")};return i.jsxs(i.Fragment,{children:[i.jsx(y,{title:"Edit Item"}),n&&i.jsx(E,{data:n,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{G as default};

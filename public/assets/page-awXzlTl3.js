import{b as k,a as h,r as m,j as i}from"./index-CF9SjLWQ.js";import{P as g}from"./PageMetaData-B4Fb5zJ6.js";import{B as d}from"./urls-BhGeBsON.js";import{G as y}from"./EditPage-B-7ztWue.js";import"./utils-DjKBegfl.js";import"./FormControl-DmgB3XQy.js";import"./FormLabel-CaO2MFER.js";import"./ElementChildren-b48Y_4K0.js";import"./FormGroup-D7dNGMyd.js";import"./FormRange-C_Mxfksa.js";import"./FormSelect-C4POiLCt.js";import"./Button-UcXSk4np.js";import"./Image-DGQJ2Jha.js";import"./TextField-FXpElbHG.js";import"./useFormControl-Bd5Uj6AV.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-C8K2eoCJ.js";const N=()=>{const{taskId:r}=k(),n=h(),[p,l]=m.useState({});m.useEffect(()=>{r&&fetch(`${d}/get-task-detail/${r}`).then(async s=>{const t=await s.json();l(t)}).catch(s=>console.error(s))},[r]);const f=async s=>{try{const t=new FormData;for(const[e,a]of Object.entries(s))a instanceof File?t.append(e,a):Array.isArray(a)&&a.some(o=>o instanceof File)?a.forEach(o=>{o instanceof File&&t.append(`${e}[]`,o)}):typeof a=="object"&&a!==null?t.append(e,JSON.stringify(a)):t.append(e,a);const c=await fetch(`${d}/update-task/${r}`,{method:"POST",body:t});if(c.ok)n("/dashboard/tasks");else{const e=await c.json();alert(`Failed to update: ${e.message||"Unknown error"}`)}}catch(t){console.error("Error updating user:",t),alert("Error updating user. Please try again.")}},u=()=>{n("/dashboard/tasks")};return i.jsxs(i.Fragment,{children:[i.jsx(g,{title:"Edit Task"}),p&&i.jsx(y,{data:p,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{N as default};

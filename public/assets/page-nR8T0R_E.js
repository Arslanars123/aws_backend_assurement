import{r as c,b as v,a as h,j as i}from"./index-BMHGnWcK.js";import{P as g}from"./PageMetaData-Bgn24qMg.js";import{B as m}from"./urls-CvG9cD6N.js";import{G as y}from"./EditPage-CsssYQwl.js";import"./utils-CJbgxhCN.js";import"./Form-3MPO2ubb.js";import"./FormCheck-CxttwEL4.js";import"./FormControl-BhCdWsRE.js";import"./FormContext-_pJuLZf_.js";import"./FormGroup-lh_nrrWS.js";import"./FormLabel-BBJljh0R.js";import"./FormRange-BUeztKfe.js";import"./FormSelect-Dr1VIvZ_.js";import"./Button-Dwvyfso6.js";import"./Image-BWlBzfxc.js";import"./TextField-CiuEKT8f.js";import"./useFormControl-78CrNPlx.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-C8K2eoCJ.js";const U=()=>{const[n,d]=c.useState(null),{levelId:o}=v(),l=h();c.useEffect(()=>{o&&fetch(`${m}/get-level-detail/${o}`).then(async r=>{const e=await r.json();d(e)}).catch(r=>console.error(r))},[o]);const f=async r=>{try{const e=new FormData;for(const[a,t]of Object.entries(r))t instanceof File?e.append(a,t):Array.isArray(t)&&t.some(s=>s instanceof File)?t.forEach(s=>{s instanceof File&&e.append(`${a}[]`,s)}):typeof t=="object"&&t!==null?e.append(a,JSON.stringify(t)):e.append(a,t);const p=await fetch(`${m}/update-level/${o}`,{method:"POST",body:e});if(p.ok)l("/dashboard/levels");else{const a=await p.json();alert(`Failed to update: ${a.message||"Unknown error"}`)}}catch(e){console.error("Error updating user:",e),alert("Error updating user. Please try again.")}},u=()=>{l("/dashboard/levels")};return i.jsxs(i.Fragment,{children:[i.jsx(g,{title:"Edit level"}),n&&i.jsx(y,{data:n,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{U as default};

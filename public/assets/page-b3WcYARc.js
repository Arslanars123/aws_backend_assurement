import{r as c,b as v,a as h,j as i}from"./index-BfjhYpb5.js";import{P as g}from"./PageMetaData-CFx5C9vJ.js";import{B as m}from"./urls-CXtk4x-h.js";import{G as y}from"./EditPage-bVXk2zos.js";import"./utils-CHiUcsiE.js";import"./FormControl-u0lKnE3u.js";import"./FormLabel-9Op50W6F.js";import"./ElementChildren-BEq9muP9.js";import"./FormGroup-zXFVM-Qx.js";import"./FormRange-fPwVophq.js";import"./FormSelect-CIOplRxv.js";import"./Button-0d7iDM-S.js";import"./Image-D3CG5EY4.js";import"./TextField-55yUiIyZ.js";import"./useSlot-gx2Y3tCc.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-BcofISFZ.js";const N=()=>{const[n,d]=c.useState(null),{levelId:o}=v(),l=h();c.useEffect(()=>{o&&fetch(`${m}/get-level-detail/${o}`).then(async r=>{const e=await r.json();d(e)}).catch(r=>console.error(r))},[o]);const f=async r=>{try{const e=new FormData;for(const[a,t]of Object.entries(r))t instanceof File?e.append(a,t):Array.isArray(t)&&t.some(s=>s instanceof File)?t.forEach(s=>{s instanceof File&&e.append(`${a}[]`,s)}):typeof t=="object"&&t!==null?e.append(a,JSON.stringify(t)):e.append(a,t);const p=await fetch(`${m}/update-level/${o}`,{method:"POST",body:e});if(p.ok)l("/dashboard/levels");else{const a=await p.json();alert(`Failed to update: ${a.message||"Unknown error"}`)}}catch(e){console.error("Error updating user:",e),alert("Error updating user. Please try again.")}},u=()=>{l("/dashboard/levels")};return i.jsxs(i.Fragment,{children:[i.jsx(g,{title:"Edit level"}),n&&i.jsx(y,{data:n,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{N as default};

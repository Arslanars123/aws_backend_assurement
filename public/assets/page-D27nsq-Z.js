import{b as k,a as h,r as d,j as i}from"./index-Dr-g9jBk.js";import{P as g}from"./PageMetaData-CD0WkpFn.js";import{B as m}from"./urls-BhGeBsON.js";import{G as y}from"./EditPage-CYy40Zrh.js";import"./FormControl-ChOWD-Qh.js";import"./FormLabel-CTeCMstv.js";import"./ElementChildren--wUAXB5U.js";import"./FormGroup-CcI4Zqnu.js";import"./FormRange-BLGRQlU9.js";import"./FormSelect-heaCZMyW.js";import"./Button-CREwHDWV.js";import"./Image-C4gja7eZ.js";import"./TextField-BYEnEXt8.js";import"./useSlot-52VqrUtF.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-BcofISFZ.js";const G=()=>{const{taskId:r}=k(),n=h(),[c,l]=d.useState({});d.useEffect(()=>{r&&fetch(`${m}/get-task-detail/${r}`).then(async s=>{const t=await s.json();l(t)}).catch(s=>console.error(s))},[r]);const f=async s=>{try{const t=new FormData;for(const[e,a]of Object.entries(s))a instanceof File?t.append(e,a):Array.isArray(a)&&a.some(o=>o instanceof File)?a.forEach(o=>{o instanceof File&&t.append(`${e}[]`,o)}):typeof a=="object"&&a!==null?t.append(e,JSON.stringify(a)):t.append(e,a);const p=await fetch(`${m}/update-task/${r}`,{method:"POST",body:t});if(p.ok)n("/dashboard/tasks");else{const e=await p.json();alert(`Failed to update: ${e.message||"Unknown error"}`)}}catch(t){console.error("Error updating user:",t),alert("Error updating user. Please try again.")}},u=()=>{n("/dashboard/tasks")};return i.jsxs(i.Fragment,{children:[i.jsx(g,{title:"Edit Task"}),c&&i.jsx(y,{data:c,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{G as default};

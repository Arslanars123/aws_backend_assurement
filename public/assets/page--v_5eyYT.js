import{r as c,b as h,a as g,j as i}from"./index-DXGzwTDX.js";import{P as y}from"./PageMetaData-DqMiWj9r.js";import{B as d}from"./urls-BhGeBsON.js";import{G as E}from"./EditPage-DFACdxcS.js";import"./utils-EYJZoBTj.js";import"./FormControl-gHzxXlg1.js";import"./FormLabel-MRPFOBK0.js";import"./ElementChildren-DGY4RNSr.js";import"./FormGroup-UhtCZW5Z.js";import"./FormRange-B5lnwdc-.js";import"./FormSelect-BwnGZFNn.js";import"./Button-Q8P5klcO.js";import"./Image-DXZMDITT.js";import"./TextField-DD5ZZLTe.js";import"./useFormControl-BMCg-VWj.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-C8K2eoCJ.js";const N=()=>{const[n,l]=c.useState(null),{itemId:o}=h(),m=g();c.useEffect(()=>{o&&fetch(`${d}/get-item-detail/${o}`).then(async r=>{const t=await r.json();l(t)}).catch(r=>console.error(r))},[o]);const f=async r=>{try{const t=new FormData;for(const[a,e]of Object.entries(r))e instanceof File?t.append(a,e):Array.isArray(e)&&e.some(s=>s instanceof File)?e.forEach(s=>{s instanceof File&&t.append(`${a}[]`,s)}):typeof e=="object"&&e!==null?t.append(a,JSON.stringify(e)):t.append(a,e);const p=await fetch(`${d}/update-item/${o}`,{method:"POST",body:t});if(p.ok)m("/dashboard/items");else{const a=await p.json();alert(`Failed to update: ${a.message||"Unknown error"}`)}}catch(t){console.error("Error updating user:",t),alert("Error updating user. Please try again.")}},u=()=>{m("/dashboard/items")};return i.jsxs(i.Fragment,{children:[i.jsx(y,{title:"Edit Item"}),n&&i.jsx(E,{data:n,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{N as default};

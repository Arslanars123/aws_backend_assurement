import{r as t,u as x,G as g,j as e}from"./index-B9-Fw72-.js";import{P as h}from"./PageMetaData-D2p2uQ5O.js";import{A as S}from"./AllDataTables-DzwH0y5y.js";import{B as b}from"./urls-BhGeBsON.js";import{A as y}from"./Alert-Bc5QZV3c.js";import"./ComponentContainerCard-CQST7gBQ.js";import"./Card-ZzJPZ8wj.js";import"./divWithClassName-COkzKTYF.js";import"./Button-CN5PJwBC.js";import"./index-DPbyXXZv.js";import"./IconifyIcon-Xfe04U2F.js";import"./Modal-RhpH8Ujt.js";import"./useWindow-DqqfM9dO.js";import"./DataKey-COGXBUcQ.js";import"./NoopTransition-BjYB7kNm.js";import"./Anchor-DTN-yTjD.js";const q=()=>{var p;const[r,m]=t.useState([]),[l,n]=t.useState(!1),u=x(),[c,f]=t.useState(((p=u.state)==null?void 0:p.success)||""),{selectedCompany:a,selectedProjects:o,companies:A,projects:D}=t.useContext(g),i=async()=>{n(!0);try{const s=new URLSearchParams;a&&s.append("companyId",a),o&&s.append("projectId",o);const d=`${b}/get-plans?${s.toString()}`,j=await(await fetch(d)).json();m(j)}catch(s){console.error(s)}finally{n(!1)}};return t.useEffect(()=>{i()},[a,o]),e.jsxs(e.Fragment,{children:[c&&e.jsx(y,{variant:"success",dismissible:!0,onClose:()=>f(""),children:c}),e.jsx(h,{title:"Data Tables"}),r&&!l&&e.jsx(S,{refreshData:i,plans:r})]})};export{q as default};

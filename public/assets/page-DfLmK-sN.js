import{b,a as g,ab as j,r as d,j as n}from"./index-BaEXYFjf.js";import{P as y}from"./PageMetaData-PSLyQQbJ.js";import{B as l}from"./urls-D3INM0xz.js";import{G as E}from"./EditPage-DqcK7xDd.js";import"./utils-CJbgxhCN.js";import"./Form-DRj-Cje_.js";import"./FormControl-ZQh5JFHF.js";import"./FormContext-kuoxlIs5.js";import"./ElementChildren-C1IvTjgI.js";import"./FormGroup-CYZ2QzZ_.js";import"./FormLabel-BbxHmEpm.js";import"./FormRange-CU4CgP6g.js";import"./FormSelect-Bf0Zl-q8.js";import"./Button-CHKoWH3g.js";import"./Image-CFc3DKY_.js";import"./TextField-UgdUJxiT.js";import"./useFormControl-ct2n4dLn.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-C8K2eoCJ.js";const J=()=>{const{taskId:s}=b(),c=g(),[f]=j(),o=f.get("report"),[p,u]=d.useState({});d.useEffect(()=>{s&&fetch(`${l}/get-task-detail/${s}`).then(async r=>{const t=await r.json();u(t)}).catch(r=>console.error(r))},[s]);const h=async r=>{try{const t=new FormData;for(const[e,a]of Object.entries(r))a instanceof File?t.append(e,a):Array.isArray(a)&&a.some(i=>i instanceof File)?a.forEach(i=>{i instanceof File&&t.append(`${e}[]`,i)}):typeof a=="object"&&a!==null?t.append(e,JSON.stringify(a)):t.append(e,a);const m=await fetch(`${l}/update-task/${s}`,{method:"POST",body:t});if(m.ok){const e=o?`/dashboard/projects?report=${o}`:"/dashboard/tasks";c(e)}else{const e=await m.json();alert(`Failed to update: ${e.message||"Unknown error"}`)}}catch(t){console.error("Error updating user:",t),alert("Error updating user. Please try again.")}},k=()=>{const r=o?`/dashboard/projects?report=${o}`:"/dashboard/tasks";c(r)};return n.jsxs(n.Fragment,{children:[n.jsx(y,{title:"Edit Task"}),p&&n.jsx(E,{data:p,disabledFields:["_id"],onSave:h,onCancel:k})]})};export{J as default};

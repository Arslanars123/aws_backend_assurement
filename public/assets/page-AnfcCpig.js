import{b as h,a as g,r as d,j as i}from"./index-DpbIAROa.js";import{P as y}from"./PageMetaData-C6UhIQjj.js";import{B as l}from"./urls-CXtk4x-h.js";import{G as E}from"./EditPage-B6iSqcDv.js";import"./utils-D-_6D1Ns.js";import"./FormControl-CRveXHIl.js";import"./FormLabel-BVfCwwhh.js";import"./ElementChildren-9SPyiMZx.js";import"./FormGroup-BOD1dp7p.js";import"./FormRange-BeCgdMae.js";import"./FormSelect-CT6NOnnm.js";import"./Button-DGaw8vsr.js";import"./Image-B69svh6Q.js";import"./TextField-FXRTZwW7.js";import"./useSlot-DUXHA9fQ.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-BcofISFZ.js";const L=()=>{const{descriptionId:a}=h(),n=g(),[c,m]=d.useState(null);d.useEffect(()=>{a&&fetch(`${l}/get-description-detail/${a}`).then(async o=>{const e=await o.json();m(e)}).catch(o=>console.error(o)).finally(()=>setIsLoading(!1))},[a]);const f=async o=>{try{const e=new FormData;for(const[r,t]of Object.entries(o))t instanceof File?e.append(r,t):Array.isArray(t)&&t.some(s=>s instanceof File)?t.forEach(s=>{s instanceof File&&e.append(`${r}[]`,s)}):typeof t=="object"&&t!==null?e.append(r,JSON.stringify(t)):e.append(r,t);const p=await fetch(`${l}/update-description/${a}`,{method:"POST",body:e});if(p.ok)n("/dashboard/descriptions");else{const r=await p.json();alert(`Failed to update: ${r.message||"Unknown error"}`)}}catch(e){console.error("Error updating user:",e),alert("Error updating user. Please try again.")}},u=()=>{n("/dashboard/descriptions")};return i.jsxs(i.Fragment,{children:[i.jsx(y,{title:"Edit Assurance Description"}),c&&i.jsx(E,{data:c,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{L as default};

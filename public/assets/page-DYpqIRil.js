import{b as h,a as g,r as d,j as i}from"./index-CcXmhF8I.js";import{P as y}from"./PageMetaData-_VBvv3yh.js";import{B as l}from"./urls-BhGeBsON.js";import{G as E}from"./EditPage-DQaXsosH.js";import"./utils-COj2bM0N.js";import"./FormControl-IaSihKBy.js";import"./FormLabel-ur_7HqrZ.js";import"./ElementChildren-DFL8XuY9.js";import"./FormGroup-D9ifnLaV.js";import"./FormRange-CQhrKEDN.js";import"./FormSelect-Cej4LfTs.js";import"./Button-Bb5NLKr0.js";import"./Image-BA0SNZ1J.js";import"./TextField-DX6iEtHg.js";import"./useFormControl-DAPC7iVt.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-C8K2eoCJ.js";const L=()=>{const{descriptionId:a}=h(),n=g(),[c,m]=d.useState(null);d.useEffect(()=>{a&&fetch(`${l}/get-description-detail/${a}`).then(async o=>{const e=await o.json();m(e)}).catch(o=>console.error(o)).finally(()=>setIsLoading(!1))},[a]);const f=async o=>{try{const e=new FormData;for(const[r,t]of Object.entries(o))t instanceof File?e.append(r,t):Array.isArray(t)&&t.some(s=>s instanceof File)?t.forEach(s=>{s instanceof File&&e.append(`${r}[]`,s)}):typeof t=="object"&&t!==null?e.append(r,JSON.stringify(t)):e.append(r,t);const p=await fetch(`${l}/update-description/${a}`,{method:"POST",body:e});if(p.ok)n("/dashboard/descriptions");else{const r=await p.json();alert(`Failed to update: ${r.message||"Unknown error"}`)}}catch(e){console.error("Error updating user:",e),alert("Error updating user. Please try again.")}},u=()=>{n("/dashboard/descriptions")};return i.jsxs(i.Fragment,{children:[i.jsx(y,{title:"Edit Assurance Description"}),c&&i.jsx(E,{data:c,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{L as default};

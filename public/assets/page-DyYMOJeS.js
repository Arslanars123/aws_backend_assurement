import{b as h,a as g,r as d,j as i}from"./index-S4cPkaXI.js";import{P as y}from"./PageMetaData-u0IuTTri.js";import{B as m}from"./urls-DHmWp6-I.js";import{G as E}from"./EditPage--V52YCTm.js";import"./utils-CJbgxhCN.js";import"./Form-B6IVgYSx.js";import"./FormControl-DZh-Msrb.js";import"./FormContext-3vyf8OR-.js";import"./ElementChildren-fnQRsVCu.js";import"./FormGroup-DoXrZngg.js";import"./FormLabel-xT7fLwVI.js";import"./FormRange-Dn1-Ecm8.js";import"./FormSelect--prDjbZc.js";import"./Button-BdLFNPe1.js";import"./Image-C0iuPhbd.js";import"./TextField-BSYfgtkt.js";import"./useFormControl-CQ-iehwM.js";import"./assertThisInitialized-B9jnkVVz.js";import"./createPopper-C8K2eoCJ.js";const R=()=>{const{descriptionId:a}=h(),n=g(),[p,l]=d.useState(null);d.useEffect(()=>{a&&fetch(`${m}/get-description-detail/${a}`).then(async o=>{const t=await o.json();l(t)}).catch(o=>console.error(o)).finally(()=>setIsLoading(!1))},[a]);const f=async o=>{try{const t=new FormData;for(const[r,e]of Object.entries(o))e instanceof File?t.append(r,e):Array.isArray(e)&&e.some(s=>s instanceof File)?e.forEach(s=>{s instanceof File&&t.append(`${r}[]`,s)}):typeof e=="object"&&e!==null?t.append(r,JSON.stringify(e)):t.append(r,e);const c=await fetch(`${m}/update-description/${a}`,{method:"POST",body:t});if(c.ok)n("/dashboard/descriptions");else{const r=await c.json();alert(`Failed to update: ${r.message||"Unknown error"}`)}}catch(t){console.error("Error updating user:",t),alert("Error updating user. Please try again.")}},u=()=>{n("/dashboard/descriptions")};return i.jsxs(i.Fragment,{children:[i.jsx(y,{title:"Edit Assurance Description"}),p&&i.jsx(E,{data:p,disabledFields:["_id"],onSave:f,onCancel:u})]})};export{R as default};
